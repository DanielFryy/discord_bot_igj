name: Discord notifier

run-name: Running Tests and Build on ${{ github.ref_name }} ðŸš€

on:
  push:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn

  tests:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Node.js dependencies from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run tests
        run: yarn test:all

      - name: Calculate Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date --utc +%FT%TZ)" >> $GITHUB_ENV

      - name: Notify Discord on Tests Success
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          TIMESTAMP: ${{ env.TIMESTAMP }}
        if: success()
        run: |
          envsubst < src/messages/special/success/tests.json | curl -X POST \
          -H "Content-Type: application/json" \
          -d @- \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Tests Failure
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          TIMESTAMP: ${{ env.TIMESTAMP }}
        if: failure()
        run: |
          envsubst < src/messages/special/failure/tests.json | curl -X POST \
          -H "Content-Type: application/json" \
          -d @- \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - run: echo "ðŸŽ‰ The job was automatically triggered by a ${{ github.event_name }} event."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Node.js dependencies from cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build the Discord bot
        run: yarn build

      - name: Calculate Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date --utc +%FT%TZ)" >> $GITHUB_ENV

      - name: Notify Discord on Build Success
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          TIMESTAMP: ${{ env.TIMESTAMP }}
        if: success()
        run: |
          envsubst < src/messages/special/success/build.json | curl -X POST \
          -H "Content-Type: application/json" \
          -d @- \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify Discord on Build Failure
        env:
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_SERVER_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          TIMESTAMP: ${{ env.TIMESTAMP }}
        if: failure()
        run: |
          envsubst < src/messages/special/failure/build.json | curl -X POST \
          -H "Content-Type: application/json" \
          -d @- \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
